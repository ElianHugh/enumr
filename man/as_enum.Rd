% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_enum.r
\name{as_enum}
\alias{as_enum}
\alias{as_enum.list}
\alias{as_enum.environment}
\alias{as_enum.factor}
\alias{as_enum.data.frame}
\alias{as_enum.NULL}
\alias{as_enum.default}
\title{Coerce lists, environments, and factors to enumerations}
\usage{
as_enum(x, ...)

\method{as_enum}{list}(x, ...)

\method{as_enum}{environment}(x, ..., .all_names = FALSE, .sorted = TRUE)

\method{as_enum}{factor}(x, ..., .sorted = TRUE)

\method{as_enum}{data.frame}(x, ...)

\method{as_enum}{`NULL`}(x, ...)

\method{as_enum}{default}(x, ...)
}
\arguments{
\item{x}{the object to coerce to enum}

\item{...}{parameters to pass to further methods}

\item{.all_names}{whether to include variables with a dot \code{.}}

\item{.sorted}{whether the object elements should be sorted}
}
\value{
An enumeration (enum), a list of unique name/value pairs
}
\description{
\code{as_enum()} turns an existing object into an enumeration. Coercion
can be used when you want to create an enum, but don't know
what the exact values each member will contain at runtime. This is comparable
to the \code{\link[base:list]{as.list}} method.

As an S3 generic, \code{as_enum()} holds methods for:
\itemize{
\item \code{\link[base:list]{list}}: wrapper function that passes the list to
\code{\link[=new_generic_enum]{new_generic_enum()}}
\item \code{\link[base:data.frame]{data.frame}}: coerces a data.frame to a list (
dropping row names in the process), and supplies the list of objects
to \code{\link[=new_generic_enum]{new_generic_enum()}}
\item \code{\link[base:environment]{environment}}: coerces an environment to a list,
and supplies the list of objects to \code{\link[=new_generic_enum]{new_generic_enum()}}
\item \code{\link[base:factor]{factor}}: constructs a list of name/value pairs
from a factor, supplies the list to \code{\link[=new_numeric_enum]{new_numeric_enum()}}.
\item Default: attempt to coerce to a list, then to an enum
}
}
\examples{
as_enum(list(x = 5, y = "str"))

as_enum(rlang::env(a = 1, b = "str"))

as_enum(factor(c("January", "February", "December"), levels = month.name))

as_enum(mtcars)
}
\seealso{
\code{\link[=enum]{enum()}} create an enum from supplied arguments.
\code{\link[=new_generic_enum]{new_generic_enum()}} and \code{\link[=new_numeric_enum]{new_numeric_enum()}} create enums from
a list of arguments.
}
