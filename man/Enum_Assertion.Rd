% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enum_types.r
\name{Enum}
\alias{Enum}
\title{Enum assertion type checking}
\usage{
Enum(...)
}
\arguments{
\item{...}{a value to check type assertions with}
}
\value{
any
}
\description{
Assertion for controlling input and return types.
}
\examples{
# If you leverage the {typed} package, you can make use
# of the `Enum()` assertion for type checking:

library(typed, quietly = TRUE, warn.conflicts = FALSE)

# Variable 'x' must correspond to an enum
Enum() ? x <- enum(a, b, c)

# Variable 'x' must correspond to a variable in an enum
Enum(enum(a, b, c)) ? x <- 2

# Argument 'x' must correspond to a variable in an enum
my_function <- ? function(x = ? Enum(enum(a, b, c))) {
    print("success!")
}

# Function must return an enum
func_return <- Enum() ? function() {
    return(
        enum(a, b, c)
    )
}
}
